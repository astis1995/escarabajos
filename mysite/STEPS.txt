clone repository https://github.com/astis1995/escarabajos
export inventory_species data in mysql by going to MySQL Workbench, opening inventory schema, open inventory_species and selecting the option Server Data Export, self-contained-file
Follow the django tutorial in https://help.pythonanywhere.com/pages/FollowingTheDjangoTutorial
workon django4
Install mysqlclient: pip install mysqlclient
Intall pandas: pip install pandas
create database in pythonanywhere, estebanvsotom$inventory
user: estebanvsotom
password: CICIMAroot
database: estebanvsotom$inventory
    "default2": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "estebanvsotom$inventory",
        "USER": "estebanvsotom",
        "PASSWORD": "CICIMAroot",
        "HOST": "estebanvsotom.mysql.pythonanywhere-services.com",
        "PORT": "3306",
    }
crear tabla
CREATE TABLE inventory_specimen (
    pk INT PRIMARY KEY AUTO_INCREMENT,
    code VARCHAR(150),
    label VARCHAR(150),
    notes VARCHAR(500),
    old_code VARCHAR(150),
    collection_day VARCHAR(150),
    collection_month VARCHAR(150),
    collection_year VARCHAR(150),
    death_date VARCHAR(45),
    sex_code VARCHAR(45),
    refrigerator VARCHAR(150),
    tray VARCHAR(150),
    row_col VARCHAR(150), -- Renamed "column" to "row_col" to avoid conflict with reserved keyword
    col VARCHAR(150),     -- Renamed "column" to "col" to avoid conflict with reserved keyword
    location_code VARCHAR(150),
    location VARCHAR(150),
    genus VARCHAR(150),
    species VARCHAR(150),
    country VARCHAR(150),
    province VARCHAR(150),
    latitude VARCHAR(150),
    longitude VARCHAR(150),
    elevation VARCHAR(150),
    light_dark VARCHAR(150),
    histology_location VARCHAR(150),
    histology_stage_performed VARCHAR(150),
    histology_stage_next_up VARCHAR(150),
    rna_location VARCHAR(150),
    etoh_voucher VARCHAR(150),
    elytron VARCHAR(150),
    purpose VARCHAR(150)
);

	ALTER TABLE inventory_specimen ADD COLUMN `column` VARCHAR(150);
	ALTER TABLE inventory_specimen ADD COLUMN `row` VARCHAR(150);
modify wsgy file:
"""
WSGI config for mysite project.

It exposes the WSGI callable as a module-level variable named ``application``.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/howto/deployment/wsgi/
"""

import os

from django.core.wsgi import get_wsgi_application

os.environ.setdefault("DJANGO_SETTINGS_MODULE", "mysite.settings")

application = get_wsgi_application()
